{"version":3,"sources":["components/searchbar.js","components/galleryItem.js","components/imagegallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","className","onSubmit","this","props","findImages","type","autoComplete","autoFocus","placeholder","id","Component","GalleryItem","openModal","image","basicLightbox","largeImageURL","show","onClick","src","webformatURL","alt","ImageGallery","images","map","shortid","generate","App","state","query","hits","isLoading","findImage","e","preventDefault","target","setState","value","axios","get","then","response","data","catch","error","imageGalleyProps","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA2BeA,G,6KArBP,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaC,SAAUC,KAAKC,MAAMC,WAAlD,UACI,wBAAQC,KAAK,SAASL,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,GAAG,mB,GAhBHC,c,QCwBTC,E,4MAxBXC,UAAY,SAACC,GACQC,SAAA,uGAGED,EAAME,cAHR,6DAQRC,Q,uDAEH,IAAD,OACGH,EAAUX,KAAKC,MAAfU,MAGR,OACI,qBAAKI,QAAS,kBAAM,EAAKL,UAAUC,IAAQK,IAAKL,EAAMM,aAAcC,IAAI,GAAGpB,UAAU,+B,GAjBvEU,a,iBCwBXW,E,uKAnBD,IACEC,EAAWpB,KAAKC,MAAhBmB,OACR,OACI,oBAAItB,UAAU,eAAd,SAEQsB,EAAOC,KAAI,SAAAV,GAAK,OACZ,oBAA6Bb,UAAU,mBAAvC,SACI,cAAC,EAAD,CAAaa,MAAOA,KADfW,IAAQC,qB,GARdf,a,kCCErBY,EAAS,GAmDAI,E,4MAjDbC,MAAQ,CACNC,MAAO,GACPN,OAAQA,GAAUA,EAAOO,KACzBC,WAAW,G,EAGbC,UAAY,SAAAC,K,EAEZ5B,WAAa,SAAA4B,GACXA,EAAEC,iBADc,IAERL,EAAUI,EAAEE,OAAZN,MACR,EAAKO,SAAS,CAAEP,MAAOA,EAAMQ,MAAON,WAAW,IAI/C,OAAOO,IACJC,IADI,qCAE2BV,EAAMQ,MAFjC,iBADa,EACb,gBAHQ,qCAGR,6DAFU,KAMdG,MAAK,SAAAC,GAAQ,OACZ,EAAKL,SAAS,CAAEb,OAAQkB,EAASC,KAAKZ,KAAMC,WAAW,OAExDY,OAAM,SAAAC,GAAK,OAAIA,M,uDAIlB,IAAMC,EAAmB,CACvBtB,OAAQpB,KAAKyB,MAAML,QAErB,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWI,WAAYF,KAAKE,aAE3BF,KAAKyB,MAAMG,UACV,cAAC,IAAD,CACEzB,KAAK,OACLwC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,cAAC,EAAD,eAAkBJ,W,GA3CVlC,aCIHuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7cd3bc2.chunk.js","sourcesContent":["import { Component } from 'react'\n\n\nclass Searchbar extends Component {\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.props.findImages}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        id=\"query\"\n                    />\n                </form>\n            </header>\n        )\n    }\n}\n\nexport default Searchbar","import { Component } from 'react'\nimport * as basicLightbox from 'basiclightbox'\nclass GalleryItem extends Component {\n    openModal = (image) => {\n        const instance = basicLightbox.create(`\n          <div class=\"Overlay\">\n            <div class=\"Modal\">\n                <img src=${image.largeImageURL} alt=\"\" />\n            </div>\n        </div>\n        `)\n\n        instance.show()\n    }\n    render() {\n        const { image } = this.props\n\n\n        return (\n            <img onClick={() => this.openModal(image)} src={image.webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n\n        )\n    }\n\n\n}\n\nexport default GalleryItem","import { Component } from 'react'\nimport GalleryItem from './galleryItem'\nimport shortid from 'shortid'\n\n\nclass ImageGallery extends Component {\n\n    render() {\n        const { images } = this.props\n        return (\n            <ul className=\"ImageGallery\">\n                {\n                    images.map(image =>\n                        <li key={shortid.generate()} className=\"ImageGalleryItem\">\n                            <GalleryItem image={image} />\n                        </li>\n                    )\n                }\n\n            </ul>\n        )\n    }\n\n\n}\n\nexport default ImageGallery","import './App.css';\nimport Searchbar from './components/searchbar';\nimport ImageGallery from './components/imagegallery';\nimport { Component } from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nconst images = [];\nclass App extends Component {\n  state = {\n    query: '',\n    images: images || images.hits,\n    isLoading: false,\n  };\n\n  findImage = e => {};\n\n  findImages = e => {\n    e.preventDefault();\n    const { query } = e.target;\n    this.setState({ query: query.value, isLoading: true });\n    const apiKey = '19741747-aaef32235b2696c68d5824b79';\n    const per_page = 12;\n    const currentPage = 1;\n    return axios\n      .get(\n        `https://pixabay.com/api/?q=${query.value}&page=${currentPage}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\n      )\n      .then(response =>\n        this.setState({ images: response.data.hits, isLoading: false }),\n      )\n      .catch(error => error);\n  };\n\n  render() {\n    const imageGalleyProps = {\n      images: this.state.images,\n    };\n    return (\n      <div className=\"App\">\n        <Searchbar findImages={this.findImages} />\n\n        {this.state.isLoading ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        ) : (\n          <ImageGallery {...imageGalleyProps} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}