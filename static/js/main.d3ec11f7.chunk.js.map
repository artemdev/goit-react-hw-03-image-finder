{"version":3,"sources":["components/searchbar.js","components/galleryItem.js","components/imagegallery.js","api/getImages.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","className","onSubmit","this","props","handleImages","type","autoComplete","autoFocus","placeholder","id","Component","GalleryItem","openModal","image","closeModalWithEscape","e","key","modalInstance","close","closeModal","basicLightbox","largeImageURL","closable","onShow","document","addEventListener","setTimeout","querySelector","onClose","removeEventListener","show","onClick","src","webformatURL","alt","ImageGallery","images","length","map","shortid","generate","loadMore","axios","defaults","baseURL","params","image_type","orientation","per_page","getImages","q","a","page","get","httpsAgent","https","Agent","rejectUnauthorized","data","hits","console","log","error","App","state","isLoading","preventDefault","nextPage","then","setState","prevState","window","scrollTo","top","documentElement","scrollHeight","behavior","catch","target","value","imageGalleyProps","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3ec11f7.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Searchbar extends Component {\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.props.handleImages}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            id=\"q\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import { Component } from 'react';\nimport * as basicLightbox from 'basiclightbox';\n\nclass GalleryItem extends Component {\n  openModal = image => {\n    const closeModalWithEscape = e => {\n      if (e.key === 'Escape') this.modalInstance.close();\n    };\n    const closeModal = () => {\n      this.modalInstance.close();\n    };\n\n    this.modalInstance = basicLightbox.create(\n      `\n          <div class=\"Overlay\">\n            <div class=\"Modal\">\n                <img src=${image.largeImageURL} alt=\"\" />\n            </div>\n        </div>\n        `,\n      {\n        closable: true,\n        onShow: () => {\n          //add listeners\n          document.addEventListener('keydown', closeModalWithEscape);\n          setTimeout(() => {\n            document\n              .querySelector('.Overlay')\n              .addEventListener('click', closeModal);\n          }, 500);\n        },\n        onClose: () => {\n          //remove listeners\n          document.removeEventListener('keydown', closeModalWithEscape);\n          document\n            .querySelector('.Overlay')\n            .removeEventListener('click', closeModal);\n        },\n      },\n    );\n    this.modalInstance.show();\n  };\n\n  render() {\n    const { image } = this.props;\n\n    return (\n      <img\n        onClick={() => this.openModal(image)}\n        src={image.webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n      />\n    );\n  }\n}\n\nexport default GalleryItem;\n","import { Component } from 'react';\nimport GalleryItem from './galleryItem';\nimport shortid from 'shortid';\n\nclass ImageGallery extends Component {\n  render() {\n    const { images } = this.props;\n\n    return (\n      <section>\n        {!!images.length && (\n          <section>\n            <ul className=\"ImageGallery\">\n              {images.map(image => (\n                <li key={shortid.generate()} className=\"ImageGalleryItem\">\n                  <GalleryItem image={image} />\n                </li>\n              ))}\n            </ul>\n            <button\n              className=\"Button\"\n              type=\"submit\"\n              onClick={this.props.loadMore}\n            >\n              Load more\n            </button>\n          </section>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import https from 'https';\nimport axios from 'axios';\nconst API_KEY = '19741747-aaef32235b2696c68d5824b79';\nconst BASE_URL = 'https://pixabay.com/api';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\nconst getImages = async (q, page = 1) => {\n  try {\n    const { data } = await axios.get(\n      '',\n      { params: { q, page } },\n      {\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false,\n        }),\n      },\n    );\n    return data.hits;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getImages;\n","import './App.css';\nimport Searchbar from './components/searchbar';\nimport ImageGallery from './components/imagegallery';\nimport getImages from './api/getImages';\nimport { Component } from 'react';\n\nimport Loader from 'react-loader-spinner';\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    q: '',\n    page: 1,\n    images: [],\n  };\n\n  loadMore = e => {\n    e.preventDefault();\n    const nextPage = this.state.page + 1;\n    const q = this.state.q;\n\n    getImages(q, nextPage)\n      .then(images => {\n        this.setState(prevState => {\n          return {\n            ...prevState,\n            images: [...prevState.images, ...images],\n            page: nextPage,\n            isLoading: false,\n          };\n        });\n      })\n      .then(() =>\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        }),\n      )\n      .catch(console.log);\n  };\n\n  handleImages = e => {\n    e.preventDefault();\n\n    this.setState(prevState => {\n      return { ...prevState, isLoading: true, q: e.target.q.value };\n    });\n\n    getImages(e.target.q.value || this.state.q).then(images =>\n      this.setState(prevState => {\n        return { ...prevState, images: images, isLoading: false };\n      }),\n    );\n  };\n\n  render() {\n    const imageGalleyProps = {\n      images: this.state.images,\n      loadMore: this.loadMore,\n    };\n    return (\n      <div className=\"App\">\n        <Searchbar handleImages={this.handleImages} />\n\n        {this.state.isLoading ? (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        ) : (\n          <ImageGallery {...imageGalleyProps} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}